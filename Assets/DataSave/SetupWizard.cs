using SaveLoadSystem;
using UnityEngine;

namespace SaveLoadSystem
{
    public enum Compression
    {
        None,
        GZIP
    }

    public enum Encryption
    {
        None,
        AES
    }

    [DefaultExecutionOrder(-100)]
    public class SetupWizard : MonoBehaviour
    {
        [SerializeField] private bool _autoGenerateSlot;
        [SerializeField] private string _autoGeneratedSlotName;

        [SerializeField] private Compression _compression;
        [SerializeField] private Encryption _encryption;
        [SerializeField] private LogLevel _loggingDetail;

        [SerializeField] private SaveSlot[] _saveSlots;

        private void Awake()
        {
            SetValues();
            SaveSlotManager.Initialize();

            if (_autoGenerateSlot)
            {
                if (!DataManager.DoesSlotExist(_autoGeneratedSlotName))
                {
                    DataManager.CreateSaveSlot(_autoGeneratedSlotName);
                }

                DataManager.SetActiveSlot(_autoGeneratedSlotName);
            }
        }

        private void SetValues()
        {
            DataManager.CompressionType = _compression;
            DataManager.EncryptionType = _encryption;
            CustomLogger.CurrentLogLevel = _loggingDetail;
        }

        private void Update()
        {
            if (Application.isPlaying && SaveSlotManager._saveSlots != null)
            {
                _saveSlots = DataManager.GetSaveSlots().ToArray();
            }
        }
    }
}
